local Time = CS.UnityEngine.Time
local Vector3 = CS.UnityEngine.Vector3

------------------------------------------------------------------------

local Event = require("Event")

local Manager = {}
local self = Manager

self.direction = Vector3.zero

local config = {}
local model = require("Simulation.SimulationModel")
-- local view = require("Simulation.SimulationView")


function Manager.Update()
	if self.forbidden == false then
		print("Simulation Direction",self.direction)
		Event:Brocast("C2S_Net_Simulation_Operation",1,{direction=self.direction})

		self.forbidden = true
	end

end


function Manager.Single(record,count)
	model.records[count] = record
	Event:Brocast("Message_Player_Step",record)
	self.forbidden = false
end


function Manager.Multiple(records)
	-- model.records = records
	-- model.count = #model.records
end

Event:AddListener("Message_Simulation_Direction",function(dir)
	self.direction = dir
	-- Event:Brocast("Message_Player_LocalStep",self.direction)
	
end)

Event:AddListener("S2C_Net_Simulation_Record",self.Single)

-- Event:AddListener("S2C_Net_Simulation_Records",self.Multiple)

return self